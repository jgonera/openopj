OPJ (Origin Project files) format description
=============================================

This file contains a description of OPJ file format. It is incomplete
and contains only what was necessary for the author.

It is based on OPJ files generated by Origin 7 SR4 (7.0552) with [ITC200][]
addon (version 1.24.0.2, addon disk version 7.10).
Version of OPJ files: 4.2673, build: 552.

Some format information taken from [liborigin][], [liborigin2][]
and [SciDAVis OPJ import filter][].

Author: Juliusz Gonera

[ITC200]: http://www.microcal.com/products/itc/itc200.asp
[liborigin]: http://sourceforge.net/projects/liborigin/
[liborigin2]: http://soft.proindependent.com/liborigin2/
[SciDAVis OPJ import filter]: https://scidavis.svn.sourceforge.net/svnroot/scidavis/branches/origin_import/importOPJ


General observations
--------------------

* Files seem to be divided into blocks sperated by line feeds (0x0A).
* Integers are little endian.


### Size blocks

4-byte blocks seem to indicate the size of the following block (most likely
in case it contains 0x0A as its data in which case it could not be treated
as a regular block separator).

    0x0000, 4 bytes, int
      Size of the following block.

Sometimes there are 4-byte blocks filled with 0s. There is no zero-length
block following them. They seem to serve as a separator of file sections
and can appear in groups (often of 2 or 3, sometimes 5).


#### Exceptions

After three (or more?) 0 size blocks close to the end of the file, there is
no another size block. Instead data of unknown length may follow (either
binary blocks or lines of ASCII text) terminated by a 1-byte 0 block
(`0A 00 0A`).

It seems that, except for this case, three or more 0 size blocks are always
followed by a 486 size block. This fact can be used to detect this exception.
However, it is possible that something else than a 486 size block can also
occur after three or more 0 size blocks.

TODO: Check if there's really nothing else that can appear after three 0 size
blocks.


File structure
--------------

OPJ files are divided in the following sections:

    Signature string
    Header
    Data list
        Data sections
    Window list
        Window sections
            Layer list
                Layer sections
                    Sublayers list
                    Curves list
                    AxisBreaks list
                    AxisParameters list
                    AxisParameters list
                    AxisParameters list
    Parameters section
    Note list
    Project tree
    Folder tree
    File list
    Folder list
    Attachment list
        Attachment sublist 1
        Attachment sublist 2

Sections are terminated with a 0 size block.


### Signature string

A string containing three values separated by spaces (0x20) and terminated
with a line feed (0x0A).

    0x0000, 4 chars
        Magic identifier terminated with space, always "CPYA"?
    0x0005, 5 chars
        File version in MAJOR.MINOR format terminated with space
    0x000C, 4 chars (not constant?)
        Origin build number terminated with "#"

This is the only section that doesn't end with a 0 size block.


### Header

Since Origin 6.1 contains Origin version.

    0x0000, 27 bytes
        Unknown.
    0x001B, 8 bytes, double
        Origin version + build/10000 (e.g. 7.0552 is 7.0 build 552).
    0x0023, 4 bytes
        Unknown


### Data list

Data section contains dataset subsections.


#### Data section

Data section consists of two blocks: header and content. It can contain
worksheet column values, matrix or graph data. liborigin calls each header
and content group a "column".

Data sections seem to end with two 0 size blocks and a 195 size block.


##### Data header block

Each data header block is prepended with a 0 size block and a following size
block. Size seems to be always 123.

The data header block itself has the following structure:

    0x0000, 22 bytes
        Unknown.
    0x0016, 2 bytes, short int
        [dataType] (from liborigin).
    0x0018, 37 bytes
        Unknown.
    0x003D, 1 byte, char
        [valueSize], size of a single data value.
    0x003E, 1 byte
        Unknown.
    0x003F, 1 byte, char
        [dataTypeU] (from liborigin).
    0x0040, 24 bytes
        Unknown.
    0x0058, 25 bytes, zero-padded string
        Data name, for worksheets it's "WORKSHEET_COLUMN".
    0x0071, 10 bytes
        Unknown.


##### Data content block


